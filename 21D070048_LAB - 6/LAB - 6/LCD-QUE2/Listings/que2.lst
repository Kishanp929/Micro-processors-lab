C51 COMPILER V9.60.7.0   QUE2                                                              02/27/2023 22:31:43 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE QUE2
OBJECT MODULE PLACED IN .\Objects\que2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE que2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\que2
                    -.lst) TABS(2) OBJECT(.\Objects\que2.obj)

line level    source

   1          #include<at89c5131.h>
   2          #include<stdio.h>
   3          #include<stdlib.h>
   4          #include "que2.h"
   5          code unsigned char display_msg1[]=" START PROGRAM  ";
   6          code unsigned char display_msg2[]="  FIRST INPUT   ";
   7          code unsigned char display_msg3[]="   NEXT INPUT   ";
   8          code unsigned char display_msg4[]="    SORTING     ";
   9          code unsigned char display_msg5[]="   COMPLETED    ";
  10          code unsigned char display_msg6[]="  NUMBER TO BE  ";
  11          code unsigned char display_msg7[]="   SEARCHED     ";
  12          code unsigned char display_msg8[]="     NUMBER     ";
  13           code unsigned char display_msg9[]="   NOT FOUND    ";
  14          code unsigned char display_msg10[]="  THE INDEX IS  ";
  15          
  16          
  17          ///code unsigned char array_inputs;
  18          ///code unsigned char input_data;
  19          unsigned char a[4]; 
  20          unsigned char input_data;
  21          int i;
  22          int   m , k ;
  23          int last;
  24          int display_on_led;
  25          unsigned char temp;
  26          unsigned char key;
  27          int n = 5;
  28          void main()
  29          {
  30   1         
  31   1        
  32   1          P1 = 0x0F;
  33   1        
  34   1        lcd_init();       //display on
  35   1        lcd_cmd(0x80);    //move cursor to first line
  36   1        msdelay(4);       //4ms delay
  37   1        
  38   1        lcd_write_string(display_msg1);  //"START PROGRAM" command on display
  39   1        msdelay(5000);        //delay of 5 sec
  40   1        
  41   1        lcd_cmd(0x80);       // move cursor to first row first column
  42   1        
  43   1        lcd_write_string(display_msg2);  //"first input" command on display
  44   1       
  45   1        msdelay(5000);        //delay of 5 sec
  46   1        input_data = P1;  // TAKE INPUT first
  47   1        a[0] = P1;
  48   1        input_data = input_data << 4;
  49   1        P1 = input_data;        // displaying the first input on led
  50   1        
  51   1        lcd_cmd(0x80);                          //Move cursor to 1st line of LCD
  52   1        lcd_write_string(display_msg3); // display "NEXT INPUT " ON SECOND ROW
  53   1        msdelay(5000);
  54   1        for(i = 1 ; i<5 ; i++)
C51 COMPILER V9.60.7.0   QUE2                                                              02/27/2023 22:31:43 PAGE 2   

  55   1        {
  56   2          P1 = 0x0F;
  57   2        input_data = P1;       // storing P1 input in input_data
  58   2          a[i] = P1;               // storing it in an array
  59   2          input_data = input_data << 4;   // shifting by 4 bits 
  60   2          P1 = input_data;                  // displaying on leds
  61   2          lcd_cmd(0x80);                          //Move cursor to 1st line of LCD
  62   2          lcd_write_string(display_msg3); // display "NEXT INPUT " ON SECOND ROW
  63   2          msdelay(5000);
  64   2        }
  65   1        P1 = 0x0F;
  66   1        input_data = P1 ;   //storing last input in input_data
  67   1        a[4] = P1 ;           // storing last input in a[4]
  68   1        input_data = input_data << 4;
  69   1        P1 = input_data;
  70   1        lcd_cmd(0x80);
  71   1        lcd_write_string(display_msg4);
  72   1        msdelay(5000);
  73   1        P1 = 0x00;
  74   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  75   1        lcd_write_string(display_msg5);
  76   1        msdelay(1000);
  77   1        
  78   1         //implementing bubble sort
  79   1         for(m = 0 ; m < 4 ; m++)
  80   1        {
  81   2          for(k = 0 ; k < 4 ; k++)
  82   2          {
  83   3            if(a[k] >a[k+1])
  84   3            {
  85   4              temp = a[k];
  86   4              a[k] = a[k+1];
  87   4              a[k+1] = temp;
  88   4            }
  89   3            
  90   3          }
  91   2          
  92   2        }
  93   1        //bubble sort finish here
  94   1        
  95   1        //code to display sorted array on leds
  96   1        P1 = 0x00;
  97   1        input_data = P1;
  98   1        for(display_on_led=0 ; display_on_led<5 ; display_on_led++)
  99   1        {
 100   2           input_data = a[display_on_led];
 101   2           input_data = input_data << 4 ;
 102   2          P1 = input_data;
 103   2          msdelay(5000);
 104   2          P1 = 0x00;
 105   2          msdelay(1000);
 106   2        }
 107   1        //displaying on leds finished
 108   1        // Now take input
 109   1        P1 = 0xFF;
 110   1        lcd_cmd(0x80);                          //Move cursor to first line
 111   1        msdelay(4);
 112   1        lcd_write_string(display_msg6);   // display "NUMBER TO BE SEARCHED"
 113   1        msdelay(4);
 114   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
 115   1        msdelay(4);
 116   1        lcd_write_string(display_msg7);
C51 COMPILER V9.60.7.0   QUE2                                                              02/27/2023 22:31:43 PAGE 3   

 117   1        msdelay(5000);
 118   1        P1 = 0x0F;   //take input
 119   1        key = P1;    // store input in variable, key
 120   1        msdelay(1000);
 121   1        
 122   1        for(last = 0 ; last < 5 ; last++)
 123   1        {
 124   2          if(a[last] == key )
 125   2          {
 126   3             key = last;
 127   3             break;     
 128   3          }
 129   2          if(last == 4)
 130   2          {
 131   3          key = 8;
 132   3          }
 133   2          
 134   2          
 135   2        }
 136   1        if(key == 8)
 137   1        {
 138   2          lcd_cmd(0x01);     ///clear screen
 139   2        lcd_cmd(0x80);
 140   2          msdelay(4);
 141   2          
 142   2          lcd_write_string(display_msg8);
 143   2          msdelay(4);
 144   2          lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
 145   2        msdelay(4);
 146   2        lcd_write_string(display_msg9);
 147   2          msdelay(4);
 148   2          while(1);
 149   2        }
 150   1        else
 151   1        {
 152   2          lcd_cmd(0x01);        // clear screen
 153   2          lcd_cmd(0x80);
 154   2          msdelay(4);
 155   2          lcd_write_string(display_msg10);
 156   2          msdelay(4);
 157   2          key = key + 1;
 158   2           key = key << 4;
 159   2          P1 = key;
 160   2          while(1);
 161   2        }
 162   1        
 163   1        
 164   1        
 165   1        
 166   1        }
 167          
 168            
 169            
 170            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    662    ----
   CONSTANT SIZE    =    170    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       3
C51 COMPILER V9.60.7.0   QUE2                                                              02/27/2023 22:31:43 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
